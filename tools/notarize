#!/bin/bash
set -e

cd $(dirname $0)/..

: ${KEYCHAIN="build.keychain"}
: ${SIGN=""}
: ${NOTARIZE=""}
: ${AC_BUNDLE="io.acorn.cli"}

BINARY="$1"
DIR="releases/mac_darwin_all"
DMG="releases/$2.dmg"
CHECKSUMS="releases/checksums.txt"

if [[ -z "${NOTARIZE}" && "${GITHUB_REF}" =~ "refs/tags/v" ]]; then
  echo "Enabling notarize..."
  NOTARIZE="1"
fi

echo "NOTARIZE=${NOTARIZE} BUNDLE=${AC_BUNDLE} BINARY=${BINARY} DMG=${DMG}"

sudo apt-get update -y  

# Sign the binary using rcodesign, a Rust implementation of codesign. This
# requires that gcc and cargo are installed.
echo "Signing the binary..."

which curl || sudo apt-get install curl -y
which gcc || sudo apt-get install gcc -y
which cargo || sudo curl https://sh.rustup.rs -sSf | sh -s -- -y && bash
which rcodesign || cargo install apple-codesign

# Sign the binary using rcodesign.
echo "Signing ${BINARY}..."
echo "${AC_P12}" | base64 --decode > signing.p12
rcodesign sign \
  --team-name "${AC_IDENTITY}" \
  --binary-identifier "${AC_BUNDLE}" \
  --p12-file signing.p12 \
  --p12-password "${AC_P12_PASSWORD}" \
  --code-signature-flags runtime \
  "${BINARY}"
echo "Signed ${BINARY}!"

if [[ "${NOTARIZE}" == "1" ]]; then
  which mkfs.hfsplus || sudo apt-get install hfsprogs -y

  # Build the DMG
  echo "Building ${DMG}..."
  cp LICENSE README.md "${DIR}/"
  SIZE="$(du -sm "${DIR}" | awk '{print $1 + 30}')" # The size of the directory + 30 megabytes for any overhead
  dd if=/dev/zero of="${DMG}" bs=1M count="${SIZE}"
  mkfs.hfsplus -v "Acorn" "${DMG}"
  mkdir -p /tmp/acorn_mount
  sudo mount -t hfsplus -o loop "${DMG}" /tmp/acorn_mount
  sudo cp -R "${DIR}"/* /tmp/acorn_mount
  sudo umount /tmp/acorn_mount
  echo "Built ${DMG}!"

  # Notarize and staple the DMG
  echo "Building app-store-connect-api-key..."
  echo "${AC_PRIVATE_KEY}" | base64 --decode > private.p8
  rcodesign encode-app-store-connect-api-key \
    -o ./key.json \
    "${AC_ISSUER_ID}" \
    "${AC_KEY_ID}" \
    private.p8
  echo "Built app-store-connect-api-key!"

  echo "Notarizing and stapling ${DMG}..."
  rcodesign notary-submit --api-key-path ./key.json "${DMG}" --staple 
  echo "${DMG} has been notarized and stapled!"

  # Add the sha256sum of the DMG to the checksums file
  echo "Adding ${DMG}'s checksum to the checksums file..."
  sha256sum "${DMG}" >> "${CHECKSUMS}"
  echo "Added ${DMG}'s checksums!"

else
  echo "Skipping notarizing & disk image creation"
fi

