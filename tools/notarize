#!/bin/bash
set -e

cd $(dirname $0)/..

: ${KEYCHAIN="build.keychain"}
: ${SIGN=""}
: ${NOTARIZE=""}
: ${AC_BUNDLE="io.acorn.cli"}

BINARY="$1"
DIR="releases/mac_darwin_all"
ZIP="releases/$2.zip"
CHECKSUMS="releases/checksums.txt"

if [[ -z "${NOTARIZE}" && "${GITHUB_REF}" =~ "refs/tags/v" ]]; then
  echo "Enabling notarize..."
  NOTARIZE="1"
fi

echo "NOTARIZE=${NOTARIZE} BUNDLE=${AC_BUNDLE} BINARY=${BINARY} ZIP=${ZIP}"

sudo apt-get update -y  

# Sign the binary using rcodesign, a Rust implementation of codesign.
echo "Signing the binary..."

# Install rcodesign from the release page.
which wget || sudo apt-get install wget -y
wget https://github.com/indygreg/apple-platform-rs/releases/download/apple-codesign%2F0.22.0/apple-codesign-0.22.0-x86_64-unknown-linux-musl.tar.gz
tar -xvf apple-codesign-0.22.0-x86_64-unknown-linux-musl.tar.gz
mv apple-codesign-0.22.0-x86_64-unknown-linux-musl/rcodesign /usr/local/bin

# Sign the binary using rcodesign.
echo "Signing ${BINARY}..."
echo "${AC_P12}" | base64 --decode > signing.p12
rcodesign sign \
  --team-name "${AC_IDENTITY}" \
  --binary-identifier "${AC_BUNDLE}" \
  --p12-file signing.p12 \
  --p12-password "${AC_P12_PASSWORD}" \
  --code-signature-flags runtime \
  "${BINARY}"
echo "Signed ${BINARY}!"

# Currently, NOTARIZE is always set to 0. In effect, this means that the
# binary is signed, but not zipped up, notarized or stapled. Since all of the 
# official installation processes are through brew or wget, the notarized DMG we were
# creating was not necessary. Where this does become a problem is if a user 
# wants to install from a browser. In this situation, there will need to be 
# a notarization process otherwise MacOS will mark our binary as unsafe and 
# the user will need to go through hoops to install it. In this instance,
# setting NOTARIZE to 1 will create a ZIP file (since it was difficult to create
# a DMG while not on MacOS) and Notarize it.
#
# Note - If you want to staple that ZIP, you will need to staple each individual
#        item in the zip file.
#
# References: 
# https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow
# https://gregoryszorc.com/docs/apple-codesign/0.17.0/apple_codesign_rcodesign.html
if [[ "${NOTARIZE}" == "1" ]]; then
  which zip || sudo apt-get install zip -y

  # Zip everything up
  echo "Building ${ZIP}..."
  cp LICENSE README.md "${DIR}/"
  zip -r "${ZIP}" "${DIR}"
  echo "Built ${ZIP}!"

  # Notarize the ZIP
  echo "Building app-store-connect-api-key..."
  echo "${AC_PRIVATE_KEY}" | base64 --decode > private.p8
  rcodesign encode-app-store-connect-api-key \
    -o ./key.json \
    "${AC_ISSUER_ID}" \
    "${AC_KEY_ID}" \
    private.p8
  echo "Built app-store-connect-api-key!"

  echo "Notarizing ${ZIP}..."
  rcodesign notary-submit --api-key-path ./key.json "${ZIP}"
  echo "Notarized ${ZIP}!"

  # Add the sha256sum of the ZIP to the checksums file
  echo "Adding ${ZIP}'s checksum to the checksums file..."
  sha256sum "${ZIP}" >> "${CHECKSUMS}"
  echo "Added ${ZIP}'s checksums!"

else
  echo "Skipping zip creation and notarization"
fi

