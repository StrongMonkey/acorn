kind: Job
apiVersion: batch/v1
metadata:
  name: oneimage
  namespace: app-created-namespace
  annotations:
    apply.acorn.io/prune: "false"
    apply.acorn.io/update: "true"
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/app-public-name": "app-name"
    "acorn.io/job-name": "oneimage"
    "acorn.io/managed": "true"
spec:
  backoffLimit: 1000
  template:
    metadata:
      labels:
        "acorn.io/app-namespace": "app-namespace"
        "acorn.io/app-name": "app-name"
        "acorn.io/app-public-name": "app-name"
        "acorn.io/job-name": "oneimage"
        "acorn.io/managed": "true"
      annotations:
        acorn.io/container-spec: '{"build":{"context":".","dockerfile":"Dockerfile"},"image":"image-name","ports":[{"port":80,"protocol":"http","targetPort":81}],"probes":null,"sidecars":{"left":{"image":"foo","ports":[{"port":90,"protocol":"tcp","targetPort":91}],"probes":null}}}'
    spec:
      imagePullSecrets:
        - name: oneimage-pull-1234567890ab
      restartPolicy: Never
      serviceAccountName: oneimage
      enableServiceLinks: false
      terminationGracePeriodSeconds: 5
      containers:
        - name: oneimage
          env:
            - name: ACORN_EVENT
              value: create
          image: "image-name"
          readinessProbe:
            tcpSocket:
              port: 81
          ports:
            - containerPort: 81
              protocol: "TCP"
          terminationMessagePath: "/run/secrets/output"
        - name: left
          env:
            - name: ACORN_EVENT
              value: create
          image: "foo"
          readinessProbe:
            tcpSocket:
              port: 91
          ports:
            - containerPort: 91
              protocol: "TCP"
          terminationMessagePath: "/run/secrets/output"
---
kind: Job
apiVersion: batch/v1
metadata:
  name: twoimage
  namespace: app-created-namespace
  annotations:
    apply.acorn.io/prune: "false"
    apply.acorn.io/update: "true"
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/app-public-name": "app-name"
    "acorn.io/job-name": "twoimage"
    "acorn.io/managed": "true"
spec:
  backoffLimit: 1000
  template:
    metadata:
      labels:
        "acorn.io/app-namespace": "app-namespace"
        "acorn.io/app-name": "app-name"
        "acorn.io/app-public-name": "app-name"
        "acorn.io/job-name": "twoimage"
        "acorn.io/managed": "true"
      annotations:
        acorn.io/container-spec: '{"build":{"context":".","dockerfile":"Dockerfile"},"image":"image-name","ports":[{"port":80,"protocol":"http","targetPort":81}],"probes":null,"sidecars":{"left":{"image":"foo","ports":[{"port":90,"protocol":"tcp","targetPort":91}],"probes":null}}}'
    spec:
      imagePullSecrets:
        - name: twoimage-pull-1234567890ab
      restartPolicy: Never
      serviceAccountName: twoimage
      enableServiceLinks: false
      terminationGracePeriodSeconds: 5
      containers:
        - name: twoimage
          env:
            - name: ACORN_EVENT
              value: create
          image: "image-name"
          readinessProbe:
            tcpSocket:
              port: 81
          ports:
            - containerPort: 81
              protocol: "TCP"
          terminationMessagePath: "/run/secrets/output"
        - name: left
          env:
            - name: ACORN_EVENT
              value: create
          image: "foo"
          readinessProbe:
            tcpSocket:
              port: 91
          ports:
            - containerPort: 91
              protocol: "TCP"
          terminationMessagePath: "/run/secrets/output"
