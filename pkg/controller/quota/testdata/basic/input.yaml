kind: AppInstance
apiVersion: internal.acorn.io/v1
metadata:
  name: app-name
  namespace: app-namespace
  uid: 1234567890abcdef
spec:
  image: image-name
  computeClass:
    "": default-compute-class
status:
  observedGeneration: 1
  namespace: app-created-namespace
  appImage:
    id: test
  appSpec:
    containers:
      container-name:
        sidecars:
          sidecar-name:
            image: "image-name"
            ports:
              - port: 90
                targetPort: 91
                protocol: tcp
        ports:
        - port: 80
          targetPort: 81
          protocol: http
        image: "image-name"
        build:
          dockerfile: "Dockerfile"
          context: "."
    jobs:
      job-name:
        ports:
        - port: 80
          targetPort: 81
          protocol: http
        image: "image-name"
        build:
          dockerfile: "Dockerfile"
          context: "."
    secrets:
      test:
        params:
          characters: bcdfghjklmnpqrstvwxz2456789
          length: 54
        type: token
    volumes:
      test:
        accessModes:
        - readWriteOnce
  resolvedOfferings:
    containers:
      "":
        class: default-compute-class
        cpu: 125
        memory: 536870912
      container-name:
        class: default-compute-class
        cpu: 125
        memory: 536870912
      sidecar-name:
        class: default-compute-class
        cpu: 125
        memory: 536870912
    volumes:
      test:
        class: default-volume-class
        size: 536870912
  scheduling:
    container-name:
      requirements:
        limits:
          memory: 512Mi
        requests:
          cpu: 75m
          memory: 128Mi # simulate requestScaler
    sidecar-name:
      requirements:
        limits:
          memory: 512Mi
        requests:
          cpu: 75m
          memory: 128Mi # simulate requestScaler
